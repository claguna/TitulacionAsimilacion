\chapter{Conlusiones}
\section{Trabajo futuro y escalabilidad}
%% Escalabilidad de la aplicacion en C++
  %% Programación en paralelo
  \subsection{Paralelismo}
  \subsubsection*{Introducci'on}
  La proliferaci'on de sistemas de alto rendimiento y el surgimiento de redes
  cada vez m'as veloces han atra'ido un gran inter'es en los sistemas parelos
  y distribu'idos.
  
  Desde hace algunos años las tecnolog'ias de cómputo han sufrido un cambio significativo
  principalmente en la arquitectura. La imposibilidad de incrementar la velocidad del reloj
  interno de las computadoras debido al sobrecalentamiento y alto consumo enereg'etico
  de los procesadores llev'o a la industr'ia a dar por terminada la carrera de los ciclos de reloj.
  Es as'i como surge la era de los procesadores multin'ucleo.

  La nueva estrategia consiste en tener m'ultiples procesadores integrados en la misma estampa compartiendo los mismos
  cach'es de memoria o segmentando el cach'e para cada procesador individual.
  
  Las nuevas apliaciones deben ser diseñadas y programadas de tal manera que exploten los beneficios de las
  nuevas arquitecturas, es decir, coordinar procesos para distribuir el trabajo para as'i lograr mejorar el 
  desempeño de los programas.

  La computaci'on en paralelo ha tenido un impacto amplio en una gran variedad 
  de areas desde simulaciones computacionales para aplicaciones cient'ificas
  y de ingenier'ia hasta aplicaciones comerciales en miner'ia de datos y 
  procesamiento de transacciones.
  
  \subsubsection*{Clasificaci'on de paralelismo}
  
  Las computadoras concurrentes permiten la explotaci'on de muchos modelos de paralelismo. Entre 
  los modelos de paralelismo que se usan comunmente se encuentran los siguientes:

\begin{itemize}
  \item Procesamiento multihilos.
  \item Memoria compartida (sin multihilos).
  \item Memoria distribuida / Paso de mensajes.
  \item Paralelismo de datos \textit{Single Program Multiple Data} (SPMD)
  \item Paralelismo de datos e instrucciones \textit{Multiple Program Multiple Data} (MPMD)
 \end{itemize}

  \subsubsection*{Aplicaci'on del paralelismo para un trabajo futuro}
  
Como hemos visto, la implementaci'on actual maneja una zona amplia pero muy determinada en la que el programa puede realizar 
el c'alculo de precipitaci'on.

Un trabajo futuro implica ampliar la zona y el n'umero de horas guardadas en la base de datos. La gran cantidad de informaci'on
y el requerimiento de un sistema que responda en tiempo real invita a implementar el sistema usando el paradigma SPMD 
en combinaci'on con programación multihilos.

La naturaleza del algoritmo permite que se pueda operar una im'agen individual usando un sistema de memoria compartida por 
una cantidad de hilos que permitan calcular de manera independiente secciones de cada im'agen.
  
  %% Limitantes en la velocidad de la conexión para acceder a la información 

%% Escalabilidad de la base de datos
\subsubsection*{Escalabilidad de la base de datos}
  %% Hacer calculos de almacenamiento por día y plantear el problema de escalabilidad y performance
Las tecnologías de bases de datos han evolucionado de manera muy rápida, especialmen
  %% Problemas del Modelo relacional y manejo de índices
  %% Escalabilidad usando BigTable o MangoBD o una BD distribuida  

%% Escalabilidad de la página web
  %% El acceso paralelo no es problema, pero si la capacidad del server
  %% Escalabilidad de tecnologías mediante una Implementación en GWT vs JSF y Primefaces

\section{Trabajo Futuro}

%% Implementación del segundo algoritmo

%% Conseguir información confiable de satélite y de las estaciones mediante un convenio sólido para implementar
%% el segundo algoritmo 

